minimum_pre_commit_version: "4.3.0"

exclude: |
  (?x)^(
    src/docs/_build/|
    dist/|
    build/|
    .*/migrations/|
    .*/node_modules/
  )

repos:
  # Ruff → linter + formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.1
    hooks:
      - id: ruff
        args: ["--fix"]     # lint + autofix (bez I jeśli nie chcesz sortować importów ruffem)
      - id: ruff-format     # formatter (zastępuje Black)

  # Mypy → type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        args: ["--strict", "--show-column-numbers", "--show-error-codes"]
        additional_dependencies: [
          "pydantic>=2.0",
          "aiohttp",
          "types-aiofiles",
          "python-socketio",
          "tree-sitter",
          "tree-sitter-javascript",
          "keyring",
        ]

  # Secrets scanning with Gitleaks
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        name: gitleaks (protect staged)
        entry: gitleaks protect --staged --redact
        language: golang
        pass_filenames: false

  # Useful generic checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ["--maxkb=2048"]
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: trailing-whitespace

  # --- SECURITY: code (SAST) ---
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: bandit (scan src/)
        args: ["-r", "src", "-q"]
        pass_filenames: false

  # --- SECURITY: Semgrep ---
  - repo: https://github.com/returntocorp/semgrep
    rev: v1.89.0
    hooks:
      - id: semgrep
        name: semgrep (p/ci rules)
        args: ["--config", "p/ci", "--error"]
        pass_filenames: true

  # --- SECURITY: dependencies (SCA) via Poetry export → pip-audit ---
  # DISABLED: Poetry 2.2.1 export command requires plugin configuration
  # TODO: Re-enable once poetry export is properly configured
  # - repo: local
  #   hooks:
  #     - id: pip-audit-poetry
  #       name: pip-audit (Poetry export)
  #       language: system
  #       entry: bash -c 'poetry export --without-hashes --format requirements.txt | poetry run pip-audit -r - --progress-spinner off --strict'
  #       pass_filenames: false
  #       stages: [pre-commit]

  # --- TESTY na pre-push z progiem coverage ---
  - repo: local
    hooks:
      - id: pytest-pre-push
        name: pytest (coverage gate on push)
        language: system
        entry: bash -c 'poetry run pytest --maxfail=1 --disable-warnings -q --cov=src --cov-report=term-missing --cov-fail-under=80'
        pass_filenames: false
        stages: [pre-push]
