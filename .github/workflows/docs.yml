name: Docs

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: ['20*']  # CalVer tags like 2025.1.15 or 2025a1
  workflow_run:
     workflows: ["CI"]
     types: [completed]
     branches: [main]

jobs:
  docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13.2"

      - uses: snok/install-poetry@v1
        with:
          version: "2.2.1"
          virtualenvs-in-project: true

      - name: Enable dynamic versioning (poetry plugin)
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable

      - name: Cache .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.13.2-${{ hashFiles('poetry.lock') }}

      - name: Install docs deps
        run: |
          poetry env use 3.13
          poetry install --with docs

      - name: Detect version and check if stable
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${{ github.ref_name }}"
            # Check if version contains pre-release markers (a, b, rc, dev)
            if [[ "$VERSION" =~ (a|b|rc|dev) ]]; then
              echo "is_stable=false" >> $GITHUB_OUTPUT
              echo "version=$VERSION" >> $GITHUB_OUTPUT
              echo "Pre-release version detected: $VERSION - skipping deployment"
            else
              echo "is_stable=true" >> $GITHUB_OUTPUT
              echo "version=$VERSION" >> $GITHUB_OUTPUT
              echo "Stable version detected: $VERSION"
            fi
          else
            # Push to main branch - use 'dev' as version
            echo "is_stable=false" >> $GITHUB_OUTPUT
            echo "version=dev" >> $GITHUB_OUTPUT
            echo "Development build from main branch"
          fi

      - name: Build Sphinx docs
        env:
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
        run: |
          poetry run sphinx-build -W --keep-going -b html docs docs/_build/html

      - name: Prepare versioned deployment
        if: steps.version.outputs.version != ''
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          mkdir -p deploy_root
          
          # Copy built docs to versioned directory
          cp -r docs/_build/html "deploy_root/$VERSION"
          
          # If stable version, create/update 'latest' symlink
          if [[ "${{ steps.version.outputs.is_stable }}" == "true" ]]; then
            cd deploy_root
            ln -sfn "$VERSION" latest
            cd ..
            echo "Created 'latest' symlink pointing to $VERSION"
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: |
          (github.ref == 'refs/heads/main') || 
          (startsWith(github.ref, 'refs/tags/20') && steps.version.outputs.is_stable == 'true')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy_root
          destination_dir: .
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'docs: deploy documentation ${{ steps.version.outputs.version }}'
