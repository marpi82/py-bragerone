name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout target SHA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Detect tag and pre-release
        id: meta
        shell: bash
        run: |
          TAG="$(git tag --points-at HEAD | head -n1 || true)"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          if [[ "$TAG" =~ (a|b|rc)[0-9]+$ ]]; then
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "prerelease=false" >> "$GITHUB_OUTPUT"
          fi
          echo "Detected tag: ${TAG:-<none>}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: pipx install poetry

      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable

      - name: Install project
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Build artifacts
        run: poetry build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      # --- OPTIONAL: enable when you configure TestPyPI/PyPI ---
      # - name: Publish to TestPyPI (pre-release tag)
      #   if: ${{ steps.meta.outputs.tag != '' && steps.meta.outputs.prerelease == 'true' }}
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository-url: https://test.pypi.org/legacy/
      #
      # - name: Publish to PyPI (stable tag)
      #   if: ${{ steps.meta.outputs.tag != '' && steps.meta.outputs.prerelease == 'false' }}
      #   uses: pypa/gh-action-pypi-publish@release/v1

      - name: Create GitHub Release (for any tag)
        if: ${{ steps.meta.outputs.tag != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          files: |
            dist/*.whl
            dist/*.tar.gz
