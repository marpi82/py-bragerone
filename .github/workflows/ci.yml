name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  secrets:
    name: secrets (gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pipx install poetry
      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root
      - name: Ruff (lint)
        run: poetry run ruff check .
      - name: Ruff (format)
        run: poetry run ruff format

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pipx install poetry
      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root
      - name: mypy
        run: poetry run mypy

  tests:
    name: tests (${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.13"] #, "3.14-dev"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: pipx install poetry
      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: pytest
        run: poetry run pytest -q --maxfail=1 --disable-warnings

  docs-verify:
    name: docs-verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pipx install poetry
      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --with docs --no-interaction
      #      - name: Debug repo layout
      #        run: |
      #          pwd
      #          echo "--- tree level 1"; ls -la
      #          echo "--- tree src"; ls -la src || true
      #          echo "--- tree src/docs"; ls -la src/docs || true
      #          echo "--- git tracked under src/docs"; git ls-files | grep -E '^src/docs/' || true
      - name: Build Sphinx docs
        run: poetry run sphinx-build -b html docs docs/_build/html

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, tests, docs-verify]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pipx install poetry
      - name: Enable dynamic versioning plugin
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]>=1.4.0"
          poetry dynamic-versioning enable
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Build dist (no publish)
        run: poetry build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist/*
